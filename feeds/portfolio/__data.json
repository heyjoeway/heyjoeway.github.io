{"type":"data","nodes":[{"type":"data","data":[{"categories":1},[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"design","ui","meta","life","work","portfolio","programming","software","macos","multiplatform","games","tools","photography","linux","windows","proxmox"],"uses":{},"slash":"always"},{"type":"data","data":[{"id":1,"meta":2,"url":6,"rss":7,"urlShort":8,"posts":9},"portfolio",{"title":3,"description":4,"unlisted":5},"Portfolio","Mostly just citations for my resume :)",true,"/feeds/portfolio","/feeds/portfolio/feed.rss","jojudge.com/feeds/portfolio",[10,55,71,243,254,353,364,375],{"id":11,"html":12,"htmlShort":13,"raw":14,"embeds":15,"media":16,"fm":50,"idFull":53,"url":54,"feed":0},"091425_0247PM","\u003Cscript context=\"module\">\n\texport const metadata = {\"hideHome\":true};\n\tconst { hideHome } = metadata;\n\u003C/script>\n\n\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props} {...metadata}>\n\u003Cp>In February of 2021, I began my Master's project: a refresh of Clarkson University's MaxFlight VR2004 motion simulator, dubbed the Virtual Reality Coaster (VRC)! This machine was purchased from a local arcade sometime in the mid-2000s, and it shows. The software is quite dated, so I produced several resources to bring it up towards modern standards:\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>pyMaxFlight:\u003C/strong> Exposes all capabilities of the MaxFlight Motion Client programmatically through Python on a the Control PC. This module only allows for local operation. MaxFlight did not provide their own public API for interfacing with the simulator, so this module works by directly accessing the Motion Client window using the Win32 API, simulating button presses and slider movements. (\u003Ca\n  href=\"https://github.com/Clarkson-IMPETUS/pyMaxFlight\"\n  rel=\"nofollow\"\n>GitHub\u003C/a>, \u003Ca\n  href=\"https://pymaxflight.readthedocs.io/en/latest/src/pyMaxFlight/\"\n  rel=\"nofollow\"\n>Docs\u003C/a>)\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>pyWSConsole:\u003C/strong> Provides network communication via WebSockets, with a focus on stability and persistent connections. Uses a console-like interface and provides automatic help documentation. (\u003Ca\n  href=\"https://github.com/heyjoeway/pyWSConsole\"\n  rel=\"nofollow\"\n>GitHub\u003C/a>)\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>VRC-Apps:\u003C/strong> A collection of Python applications to extend the functionality of the VRC using the aforementioned libraries. (\u003Ca\n  href=\"https://github.com/Clarkson-IMPETUS/VRC-Apps\"\n  rel=\"nofollow\"\n>GitHub\u003C/a>)\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003C/Layout_MDSVEX_DEFAULT>","\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props} {...metadata}>\n\u003Cp>In February of 2021, I began my Master's project: a refresh of Clarkson University's MaxFlight VR2004 motion simulator, dubbed the Virtual Reality Coaster ","---\r\nhideHome: true\r\n---\r\nIn February of 2021, I began my Master's project: a refresh of Clarkson University's MaxFlight VR2004 motion simulator, dubbed the Virtual Reality Coaster (VRC)! This machine was purchased from a local arcade sometime in the mid-2000s, and it shows. The software is quite dated, so I produced several resources to bring it up towards modern standards:\r\n\r\n- **pyMaxFlight:** Exposes all capabilities of the MaxFlight Motion Client programmatically through Python on a the Control PC. This module only allows for local operation. MaxFlight did not provide their own public API for interfacing with the simulator, so this module works by directly accessing the Motion Client window using the Win32 API, simulating button presses and slider movements. ([GitHub](https://github.com/Clarkson-IMPETUS/pyMaxFlight), [Docs](https://pymaxflight.readthedocs.io/en/latest/src/pyMaxFlight/))\r\n\r\n- **pyWSConsole:** Provides network communication via WebSockets, with a focus on stability and persistent connections. Uses a console-like interface and provides automatic help documentation. ([GitHub](https://github.com/heyjoeway/pyWSConsole))\r\n\r\n- **VRC-Apps:** A collection of Python applications to extend the functionality of the VRC using the aforementioned libraries. ([GitHub](https://github.com/Clarkson-IMPETUS/VRC-Apps))",[],[17],{"id":18,"extension":19,"date":20,"lastModifiedDate":20,"url":21,"urlGitHub":22,"exif":23},"IMG_AA04362AF84B-1.D9WN_J4n",".jpeg","2025-10-02T12:02:44-04:00","/feeds/portfolio/091425_0247PM/IMG_AA04362AF84B-1.D9WN_J4n.jpeg","https://github.com/heyjoeway/heyjoeway.github.io/tree/master/src/feeds/portfolio/091425_0247PM/IMG_AA04362AF84B-1.D9WN_J4n.jpeg",{"Bits Per Sample":24,"Image Height":27,"Image Width":30,"Color Components":33,"Subsampling":36,"FileType":47},{"value":25,"description":26},8,"8",{"value":28,"description":29},1713,"1713px",{"value":31,"description":32},920,"920px",{"value":34,"description":35},3,"3",{"value":37,"description":46},[38,42,45],[39,40,41],1,34,0,[43,44,39],2,17,[34,44,39],"YCbCr4:2:0 (2 2)",{"value":48,"description":49},"jpeg","JPEG",{"hideHome":5,"urlShort":51,"date":52},"jojudge.com/feeds/portfolio/091425_0247PM","2025-10-02T16:02:00.000Z","portfolio/091425_0247PM","/feeds/portfolio/091425_0247PM",{"id":56,"html":57,"htmlShort":58,"raw":59,"embeds":60,"media":61,"fm":67,"idFull":69,"url":70,"feed":0},"091425_0452PM","\u003Cscript context=\"module\">\n\texport const metadata = {\"hideHome\":true};\n\tconst { hideHome } = metadata;\n\u003C/script>\n\n\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props} {...metadata}>\n\u003Cp>lcatDB (Lake Champlain Anglers’ Temperature Database) was an online database and single page application (SPA) meant to provide a centralized means of recording, accessing, and analyzing vertical water temperature profiles to citizens of the Lake Champlain region. It was supported by the SUNY Plattsburgh Center for Earth & Environmental Science and the Lake Champlain Sea Grant. lcatDB was (what I consider to be) my first attempt at full stack software development. While the app never really took off and is no longer around today, I was able to demonstrate many of my strengths and learned several valuable lessons.\u003C/p>\n\u003Cp>You can read more in my \u003Ca href=\"/articles/lcatdb\">lcatDB Retrospective\u003C/a>\u003C/p>\n\u003C/Layout_MDSVEX_DEFAULT>","\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props} {...metadata}>\n\u003Cp>lcatDB (Lake Champlain Anglers’ Temperature Database) was an online database and single page application (SPA) meant to provide a centralized means of reco","---\r\nhideHome: true\r\n---\r\nlcatDB (Lake Champlain Anglers’ Temperature Database) was an online database and single page application (SPA) meant to provide a centralized means of recording, accessing, and analyzing vertical water temperature profiles to citizens of the Lake Champlain region. It was supported by the SUNY Plattsburgh Center for Earth & Environmental Science and the Lake Champlain Sea Grant. lcatDB was (what I consider to be) my first attempt at full stack software development. While the app never really took off and is no longer around today, I was able to demonstrate many of my strengths and learned several valuable lessons.\r\n\r\nYou can read more in my [lcatDB Retrospective](/articles/lcatdb)",[],[62],{"id":63,"extension":64,"date":20,"lastModifiedDate":20,"url":65,"urlGitHub":66,"exif":-1},"lcatDB Responsive Demo.CH1cWjrv",".mp4","/feeds/portfolio/091425_0452PM/lcatDB Responsive Demo.CH1cWjrv.mp4","https://github.com/heyjoeway/heyjoeway.github.io/tree/master/src/feeds/portfolio/091425_0452PM/lcatDB Responsive Demo.CH1cWjrv.mp4",{"hideHome":5,"urlShort":68,"date":52},"jojudge.com/feeds/portfolio/091425_0452PM","portfolio/091425_0452PM","/feeds/portfolio/091425_0452PM",{"id":72,"html":73,"htmlShort":74,"raw":75,"embeds":76,"media":77,"fm":239,"idFull":241,"url":242,"feed":0},"092825_0429PM","\u003Cscript context=\"module\">\n\texport const metadata = {\"hideHome\":true};\n\tconst { hideHome } = metadata;\n\u003C/script>\n\n\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props} {...metadata}>\n\u003Cp>While working at Champlain Valley Educational Services, I lead the development and deployment of several internal databases and applications using the low-code app builder \u003Ca\n  href=\"https://budibase.com/\"\n  rel=\"nofollow\"\n>Budibase\u003C/a>. This allowed me to prototype, iterate, and ship applications quickly while retaining enough flexibility to not run into dead ends.\u003C/p>\n\u003Cp>Budibase was selected only after a thorough analysis of all available \"app-builder\" services with a preference for solutions which have options for remote hosting, self-hosting, HIPAA compliance, and are generally usable. [TODO: link to analysis]\u003C/p>\n\u003Cp>Three applications I created replaced existing FileMaker databases with the goal being drop-in replacement. All of these applications have been deployed for at least 3 months with success.\u003C/p>\n\u003Cp>Two original applications were also produced. The first was a simple inventory collection app for use with a barcode scanner. The second was an application to collect check-ins for a public vote on the CVES Capital Project land sale. This collected over 500 submissions and ensured that any duplicate names/addresses were prevented and made aware to staff. This was completed in a rapid iterative process with clients over a period of about 3 weeks.\u003C/p>\n\u003C/Layout_MDSVEX_DEFAULT>","\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props} {...metadata}>\n\u003Cp>While working at Champlain Valley Educational Services, I lead the development and deployment of several internal databases and applications using the low-","---\r\nhideHome: true\r\n---\r\nWhile working at Champlain Valley Educational Services, I lead the development and deployment of several internal databases and applications using the low-code app builder [Budibase](https://budibase.com/). This allowed me to prototype, iterate, and ship applications quickly while retaining enough flexibility to not run into dead ends.\r\n\r\nBudibase was selected only after a thorough analysis of all available \"app-builder\" services with a preference for solutions which have options for remote hosting, self-hosting, HIPAA compliance, and are generally usable. [TODO: link to analysis]\r\n\r\nThree applications I created replaced existing FileMaker databases with the goal being drop-in replacement. All of these applications have been deployed for at least 3 months with success.\r\n\r\nTwo original applications were also produced. The first was a simple inventory collection app for use with a barcode scanner. The second was an application to collect check-ins for a public vote on the CVES Capital Project land sale. This collected over 500 submissions and ensured that any duplicate names/addresses were prevented and made aware to staff. This was completed in a rapid iterative process with clients over a period of about 3 weeks.",[],[78,137,171,205],{"id":79,"extension":80,"date":20,"lastModifiedDate":20,"url":81,"urlGitHub":82,"exif":83},"chrome_0vhKzo65eV",".png","/feeds/portfolio/092825_0429PM/chrome_0vhKzo65eV.png","https://github.com/heyjoeway/heyjoeway.github.io/tree/master/src/feeds/portfolio/092825_0429PM/chrome_0vhKzo65eV.png",{"Image Width":84,"Image Height":87,"Bit Depth":90,"Color Type":91,"Compression":94,"Filter":96,"Interlace":98,"Pixels Per Unit X":100,"Pixels Per Unit Y":103,"Pixel Units":104,"FileType":106,"Preferred CMM type":109,"Profile Version":111,"Profile/Device class":113,"Color Space":116,"Connection Space":118,"ICC Profile Date":120,"ICC Signature":122,"Primary Platform":124,"Device Manufacturer":127,"Device Model Number":129,"Rendering Intent":130,"Profile Creator":132,"ICC Description":133,"ICC Copyright":135},{"value":85,"description":86},1215,"1215px",{"value":88,"description":89},847,"847px",{"value":25,"description":26},{"value":92,"description":93},6,"RGB with Alpha",{"value":41,"description":95},"Deflate/Inflate",{"value":41,"description":97},"Adaptive",{"value":41,"description":99},"Noninterlaced",{"value":101,"description":102},4724,"4724",{"value":101,"description":102},{"value":39,"description":105},"meters",{"value":107,"description":108},"png","PNG",{"value":110,"description":110},"lcms",{"value":112,"description":112},"4.4.0",{"value":114,"description":115},"mntr","Display Device profile",{"value":117,"description":117},"RGB ",{"value":119,"description":119},"XYZ ",{"value":121,"description":121},"2025-09-28T20:11:33.000Z",{"value":123,"description":123},"acsp",{"value":125,"description":126},"APPL","Apple",{"value":128,"description":128},"\u0000\u0000\u0000\u0000",{"value":128,"description":128},{"value":41,"description":131},"Perceptual",{"value":110,"description":110},{"value":134,"description":134},"sRGB built-in",{"value":136,"description":136},"No copyright, use freely",{"id":138,"extension":80,"date":20,"lastModifiedDate":20,"url":139,"urlGitHub":140,"exif":141},"chrome_LSgdXQvzca","/feeds/portfolio/092825_0429PM/chrome_LSgdXQvzca.png","https://github.com/heyjoeway/heyjoeway.github.io/tree/master/src/feeds/portfolio/092825_0429PM/chrome_LSgdXQvzca.png",{"Image Width":142,"Image Height":145,"Bit Depth":148,"Color Type":149,"Compression":150,"Filter":151,"Interlace":152,"Pixels Per Unit X":153,"Pixels Per Unit Y":154,"Pixel Units":155,"FileType":156,"Preferred CMM type":157,"Profile Version":158,"Profile/Device class":159,"Color Space":160,"Connection Space":161,"ICC Profile Date":162,"ICC Signature":163,"Primary Platform":164,"Device Manufacturer":165,"Device Model Number":166,"Rendering Intent":167,"Profile Creator":168,"ICC Description":169,"ICC Copyright":170},{"value":143,"description":144},1206,"1206px",{"value":146,"description":147},516,"516px",{"value":25,"description":26},{"value":92,"description":93},{"value":41,"description":95},{"value":41,"description":97},{"value":41,"description":99},{"value":101,"description":102},{"value":101,"description":102},{"value":39,"description":105},{"value":107,"description":108},{"value":110,"description":110},{"value":112,"description":112},{"value":114,"description":115},{"value":117,"description":117},{"value":119,"description":119},{"value":121,"description":121},{"value":123,"description":123},{"value":125,"description":126},{"value":128,"description":128},{"value":128,"description":128},{"value":41,"description":131},{"value":110,"description":110},{"value":134,"description":134},{"value":136,"description":136},{"id":172,"extension":80,"date":20,"lastModifiedDate":20,"url":173,"urlGitHub":174,"exif":175},"chrome_TyQla4JZ5Q","/feeds/portfolio/092825_0429PM/chrome_TyQla4JZ5Q.png","https://github.com/heyjoeway/heyjoeway.github.io/tree/master/src/feeds/portfolio/092825_0429PM/chrome_TyQla4JZ5Q.png",{"Image Width":176,"Image Height":179,"Bit Depth":182,"Color Type":183,"Compression":184,"Filter":185,"Interlace":186,"Pixels Per Unit X":187,"Pixels Per Unit Y":188,"Pixel Units":189,"FileType":190,"Preferred CMM type":191,"Profile Version":192,"Profile/Device class":193,"Color Space":194,"Connection Space":195,"ICC Profile Date":196,"ICC Signature":197,"Primary Platform":198,"Device Manufacturer":199,"Device Model Number":200,"Rendering Intent":201,"Profile Creator":202,"ICC Description":203,"ICC Copyright":204},{"value":177,"description":178},1202,"1202px",{"value":180,"description":181},813,"813px",{"value":25,"description":26},{"value":92,"description":93},{"value":41,"description":95},{"value":41,"description":97},{"value":41,"description":99},{"value":101,"description":102},{"value":101,"description":102},{"value":39,"description":105},{"value":107,"description":108},{"value":110,"description":110},{"value":112,"description":112},{"value":114,"description":115},{"value":117,"description":117},{"value":119,"description":119},{"value":121,"description":121},{"value":123,"description":123},{"value":125,"description":126},{"value":128,"description":128},{"value":128,"description":128},{"value":41,"description":131},{"value":110,"description":110},{"value":134,"description":134},{"value":136,"description":136},{"id":206,"extension":80,"date":20,"lastModifiedDate":20,"url":207,"urlGitHub":208,"exif":209},"chrome_pBxk5wcjii","/feeds/portfolio/092825_0429PM/chrome_pBxk5wcjii.png","https://github.com/heyjoeway/heyjoeway.github.io/tree/master/src/feeds/portfolio/092825_0429PM/chrome_pBxk5wcjii.png",{"Image Width":210,"Image Height":213,"Bit Depth":216,"Color Type":217,"Compression":218,"Filter":219,"Interlace":220,"Pixels Per Unit X":221,"Pixels Per Unit Y":222,"Pixel Units":223,"FileType":224,"Preferred CMM type":225,"Profile Version":226,"Profile/Device class":227,"Color Space":228,"Connection Space":229,"ICC Profile Date":230,"ICC Signature":231,"Primary Platform":232,"Device Manufacturer":233,"Device Model Number":234,"Rendering Intent":235,"Profile Creator":236,"ICC Description":237,"ICC Copyright":238},{"value":211,"description":212},480,"480px",{"value":214,"description":215},736,"736px",{"value":25,"description":26},{"value":92,"description":93},{"value":41,"description":95},{"value":41,"description":97},{"value":41,"description":99},{"value":101,"description":102},{"value":101,"description":102},{"value":39,"description":105},{"value":107,"description":108},{"value":110,"description":110},{"value":112,"description":112},{"value":114,"description":115},{"value":117,"description":117},{"value":119,"description":119},{"value":121,"description":121},{"value":123,"description":123},{"value":125,"description":126},{"value":128,"description":128},{"value":128,"description":128},{"value":41,"description":131},{"value":110,"description":110},{"value":134,"description":134},{"value":136,"description":136},{"hideHome":5,"urlShort":240,"date":52},"jojudge.com/feeds/portfolio/092825_0429PM","portfolio/092825_0429PM","/feeds/portfolio/092825_0429PM",{"id":244,"html":245,"htmlShort":246,"raw":247,"embeds":248,"media":249,"fm":250,"idFull":252,"url":253,"feed":0},"093025_0137PM","\u003Cscript context=\"module\">\n\texport const metadata = {\"hideHome\":true};\n\tconst { hideHome } = metadata;\n\u003C/script>\n\n\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props} {...metadata}>\n\u003Cp>Here's (an attempt at) a comprehensive list of everywhere I've used Python:\u003C/p>\n\u003Cul>\n\u003Cli>2023 - now: CVES\n\u003Cul>\n\u003Cli>Data processing for user accounts, synchronizing multiple databases.\u003C/li>\n\u003Cli>Headless browser automation for data collection without official APIs. (Selenium)\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>2019 - 2023: Clarkson Virtual Roller Coaster\n\u003Cul>\n\u003Cli>\u003Ca\n  href=\"https://github.com/Clarkson-IMPETUS/VRC-Apps\"\n  rel=\"nofollow\"\n>Produced Python API for controlling coaster simulator machine.\u003C/a>\n\u003Cul>\n\u003Cli>Interfaced with legacy software using Win32 API.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca\n  href=\"https://github.com/Clarkson-IMPETUS/VRC-Apps\"\n  rel=\"nofollow\"\n>Produced example applications using API to demonstrate functionality and replace legacy integrations.\u003C/a>\u003C/li>\n\u003Cli>Automatic API documentation produced via mkdocs and annotation strings.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>2019 - 2023: Clarkson IMPETUS\n\u003Cul>\n\u003Cli>\u003Ca\n  href=\"https://github.com/heyjoeway/miniwindeploy\"\n  rel=\"nofollow\"\n>Produced miniwindeploy library for automating deployment of 30+ Windows laptops.\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cp>The earliest Python Git repo I have is when I started with GitHub in 2015: \u003Ca\n  href=\"https://github.com/heyjoeway/raspmusicbox-server\"\n  rel=\"nofollow\"\n>https://github.com/heyjoeway/raspmusicbox-server\u003C/a>\u003C/p>\n\u003C/Layout_MDSVEX_DEFAULT>","\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props} {...metadata}>\n\u003Cp>Here's (an attempt at) a comprehensive list of everywhere I've used Python:\u003C/p>\n\u003Cul>\n\u003Cli>2023 - now: CVES\n\u003Cul>\n\u003Cli>Data processing for user accounts, synchronizing multiple da","---\r\nhideHome: true\r\n---\r\nHere's (an attempt at) a comprehensive list of everywhere I've used Python:\r\n\r\n- 2023 - now: CVES\r\n    - Data processing for user accounts, synchronizing multiple databases.\r\n    - Headless browser automation for data collection without official APIs. (Selenium)\r\n- 2019 - 2023: Clarkson Virtual Roller Coaster\r\n    - [Produced Python API for controlling coaster simulator machine.](https://github.com/Clarkson-IMPETUS/VRC-Apps)\r\n        - Interfaced with legacy software using Win32 API.\r\n    - [Produced example applications using API to demonstrate functionality and replace legacy integrations.](https://github.com/Clarkson-IMPETUS/VRC-Apps)\r\n    - Automatic API documentation produced via mkdocs and annotation strings.\r\n- 2019 - 2023: Clarkson IMPETUS\r\n    - [Produced miniwindeploy library for automating deployment of 30+ Windows laptops.](https://github.com/heyjoeway/miniwindeploy)\r\n\r\nThe earliest Python Git repo I have is when I started with GitHub in 2015: https://github.com/heyjoeway/raspmusicbox-server",[],[],{"hideHome":5,"urlShort":251,"date":52},"jojudge.com/feeds/portfolio/093025_0137PM","portfolio/093025_0137PM","/feeds/portfolio/093025_0137PM",{"id":255,"html":256,"htmlShort":257,"raw":258,"embeds":259,"media":322,"fm":349,"idFull":351,"url":352,"feed":0},"093025_0205PM","\u003Cscript context=\"module\">\n\texport const metadata = {\"hideHome\":true};\n\tconst { hideHome } = metadata;\n\u003C/script>\n\n\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props} {...metadata}>\n\u003Cp>The site that you're reading right now is entirely Svelte-based. What you're reading right now is a \u003Cem>static\u003C/em> build of the site. That means anything that would typically involve dynamic routing - such as articles and feeds - are instead compiled ahead of time so that the only hosting is for a directory of files. That is to say, there is no server-side code! For you that means a faster loading site. For me, that means not having to worry about keeping the server running, keeping it secure, and defending against intrusions.\u003C/p>\n\u003Cp>However, at home I have a separate copy of the site running in \u003Cem>dynamic\u003C/em> mode, I get additional features for post management, which you can see in the picture below. This helps me make quick updates to the site when I'm out and about.\u003C/p>\n\u003Cp>My only other major Svelte project at the moment is my Grocery app. I haven't talked about it too much publicly yet but you can read my most recent post about in the embed.\u003C/p>\n\u003C/Layout_MDSVEX_DEFAULT>","\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props} {...metadata}>\n\u003Cp>The site that you're reading right now is entirely Svelte-based. What you're reading right now is a \u003Cem>static\u003C/em> build of the site. That means anything that woul","---\r\nhideHome: true\r\n---\r\nThe site that you're reading right now is entirely Svelte-based. What you're reading right now is a *static* build of the site. That means anything that would typically involve dynamic routing - such as articles and feeds - are instead compiled ahead of time so that the only hosting is for a directory of files. That is to say, there is no server-side code! For you that means a faster loading site. For me, that means not having to worry about keeping the server running, keeping it secure, and defending against intrusions.\r\n\r\nHowever, at home I have a separate copy of the site running in *dynamic* mode, I get additional features for post management, which you can see in the picture below. This helps me make quick updates to the site when I'm out and about.\r\n\r\nMy only other major Svelte project at the moment is my Grocery app. I haven't talked about it too much publicly yet but you can read my most recent post about in the embed.\r\n\r\nhttps://jojudge.com/feeds/main/093025_1135AM/",[260],{"platform":261,"post":262,"originalUrl":321},"self",{"id":263,"html":264,"htmlShort":265,"raw":266,"embeds":267,"media":268,"fm":309,"idFull":311,"url":312,"feed":313},"093025_1135AM","\n\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props}>\n\u003Cp>I figure I should give an update on the grocery app since I'm working on my portfolio! Its gotten a bit of a glow up and is feature complete for use with a single list. Multi-list and authentication is still a WIP, but since my wife and I have been so satisfied with it, that should be next on the menu. I've also Docker-ized it to make future hosting as simple as possible. The item emojis are generated using \u003Ca\n  href=\"https://huggingface.co/KomeijiForce/bart-large-emojilm\"\n  rel=\"nofollow\"\n>KomeijiForce/bart-large-emojilm\u003C/a>, and while they're not always the most accurate, they're mainly there to visually break up the list and be easier on the eyes.\u003C/p>\n\u003C/Layout_MDSVEX_DEFAULT>","\u003CLayout_MDSVEX_DEFAULT {...$$props}>\n\u003Cp>I figure I should give an update on the grocery app since I'm working on my portfolio! Its gotten a bit of a glow up and is feature complete for use with a single list. Multi-list and authentication is still a WIP, but since my wife and I have been so satisfied with it, that should be next on the m","I figure I should give an update on the grocery app since I'm working on my portfolio! Its gotten a bit of a glow up and is feature complete for use with a single list. Multi-list and authentication is still a WIP, but since my wife and I have been so satisfied with it, that should be next on the menu. I've also Docker-ized it to make future hosting as simple as possible. The item emojis are generated using [KomeijiForce/bart-large-emojilm](https://huggingface.co/KomeijiForce/bart-large-emojilm), and while they're not always the most accurate, they're mainly there to visually break up the list and be easier on the eyes. ",[],[269],{"id":270,"extension":80,"date":20,"lastModifiedDate":20,"url":271,"urlGitHub":272,"exif":273},"SCR-20250930-klce","/feeds/main/093025_1135AM/SCR-20250930-klce.png","https://github.com/heyjoeway/heyjoeway.github.io/tree/master/src/feeds/main/093025_1135AM/SCR-20250930-klce.png",{"XResolution":274,"YResolution":279,"ResolutionUnit":282,"Exif IFD Pointer":285,"PixelXDimension":288,"PixelYDimension":291,"Image Width":294,"Image Height":296,"Bit Depth":298,"Color Type":299,"Compression":300,"Filter":301,"Interlace":302,"Pixels Per Unit X":303,"Pixels Per Unit Y":306,"Pixel Units":307,"FileType":308},{"id":275,"value":276,"description":278},282,[277,39],144,"144",{"id":280,"value":281,"description":278},283,[277,39],{"id":283,"value":43,"description":284},296,"inches",{"id":286,"value":287,"description":287},34665,78,{"id":289,"value":290,"description":290},40962,996,{"id":292,"value":293,"description":293},40963,1796,{"value":290,"description":295},"996px",{"value":293,"description":297},"1796px",{"value":25,"description":26},{"value":92,"description":93},{"value":41,"description":95},{"value":41,"description":97},{"value":41,"description":99},{"value":304,"description":305},5669,"5669",{"value":304,"description":305},{"value":39,"description":105},{"value":107,"description":108},{"urlShort":310,"date":52},"jojudge.com/feeds/main/093025_1135AM","main/093025_1135AM","/feeds/main/093025_1135AM",{"id":314,"meta":315,"url":318,"rss":319,"urlShort":320,"posts":-1},"main",{"title":316,"description":317},"heyjoeway","Cult of Dinonicest","/feeds/main","/feeds/main/feed.rss","jojudge.com/feeds/main","https://jojudge.com/feeds/main/093025_1135AM/",[323],{"id":324,"extension":80,"date":20,"lastModifiedDate":20,"url":325,"urlGitHub":326,"exif":327},"SCR-20250930-mnoq","/feeds/portfolio/093025_0205PM/SCR-20250930-mnoq.png","https://github.com/heyjoeway/heyjoeway.github.io/tree/master/src/feeds/portfolio/093025_0205PM/SCR-20250930-mnoq.png",{"XResolution":328,"YResolution":330,"ResolutionUnit":332,"Exif IFD Pointer":333,"PixelXDimension":334,"PixelYDimension":336,"Image Width":337,"Image Height":339,"Bit Depth":340,"Color Type":341,"Compression":342,"Filter":343,"Interlace":344,"Pixels Per Unit X":345,"Pixels Per Unit Y":346,"Pixel Units":347,"FileType":348},{"id":275,"value":329,"description":278},[277,39],{"id":280,"value":331,"description":278},[277,39],{"id":283,"value":43,"description":284},{"id":286,"value":287,"description":287},{"id":289,"value":335,"description":335},1278,{"id":292,"value":177,"description":177},{"value":335,"description":338},"1278px",{"value":177,"description":178},{"value":25,"description":26},{"value":92,"description":93},{"value":41,"description":95},{"value":41,"description":97},{"value":41,"description":99},{"value":304,"description":305},{"value":304,"description":305},{"value":39,"description":105},{"value":107,"description":108},{"hideHome":5,"urlShort":350,"date":52},"jojudge.com/feeds/portfolio/093025_0205PM","portfolio/093025_0205PM","/feeds/portfolio/093025_0205PM",{"id":354,"html":355,"htmlShort":356,"raw":357,"embeds":358,"media":359,"fm":360,"idFull":362,"url":363,"feed":0},"093025_0228PM","\u003Cscript context=\"module\">\n\texport const metadata = {\"hideHome\":true};\n\tconst { hideHome } = metadata;\n\u003C/script>\n\n\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props} {...metadata}>\n\u003Cp>Here's (an attempt at) a comprehensive list of everywhere I've used JavaScript/TypeScript:\u003C/p>\n\u003Cul>\n\u003Cli>2024 - 2025: CVES\n\u003Cul>\n\u003Cli>Various userscripts to extract data from websites programmatically\u003C/li>\n\u003Cli>Custom scripts in Budibase\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>2024 - now: This site! (Check out my Svelte post in my portfolio, uses TypeScript)\u003C/li>\n\u003Cli>2025 - now: \u003Ca href=\"/feeds/main/093025_1135AM/\">My grocery app, uses TypeScript\u003C/a>\u003C/li>\n\u003Cli>2024 - now: \u003Ca\n  href=\"https://github.com/heyjoeway/startpage\"\n  rel=\"nofollow\"\n>My New Tab page, uses TypeScript\u003C/a>\u003C/li>\n\u003Cli>2019 - 2022: Clarkson IMPETUS\n\u003Cul>\n\u003Cli>\u003Ca\n  href=\"https://github.com/heyjoeway/mca-squid-jump\"\n  rel=\"nofollow\"\n>MakeCode Arcade programming\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>2018 - 2019: Whiteface ASRC\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://jojudge.com/whitefacetour/\" rel=\"nofollow\">Whiteface Tour\u003C/a>\u003C/li>\n\u003Cli>\u003Ca\n  href=\"https://github.com/heyjoeway/planetariumvr\"\n  rel=\"nofollow\"\n>planetariumvr\u003C/a> (codename for the framework behind Whiteface Tour)\u003C/li>\n\u003Cli>\u003Ca\n  href=\"https://github.com/heyjoeway/whiteface-tv\"\n  rel=\"nofollow\"\n>Kiosk display webpage\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>2017 - 2018: SUNY Plattsburgh, \u003Ca\n  href=\"https://github.com/heyjoeway/lcatdb\"\n  rel=\"nofollow\"\n>lcatDB\u003C/a>\u003C/li>\n\u003Cli>2016: \u003Ca\n  href=\"https://github.com/heyjoeway/epots-doc\"\n  rel=\"nofollow\"\n>Eagle Pride On the Sky (Science fair project)\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Cp>The earliest JavaScript Git repo I have is when I started with GitHub in 2015: \u003Ca\n  href=\"https://github.com/heyjoeway/raspmusicbox-client\"\n  rel=\"nofollow\"\n>https://github.com/heyjoeway/raspmusicbox-client\u003C/a>\u003C/p>\n\u003C/Layout_MDSVEX_DEFAULT>","\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props} {...metadata}>\n\u003Cp>Here's (an attempt at) a comprehensive list of everywhere I've used JavaScript/TypeScript:\u003C/p>\n\u003Cul>\n\u003Cli>2024 - 2025: CVES\n\u003Cul>\n\u003Cli>Various userscripts to extract data from web","---\r\nhideHome: true\r\n---\r\nHere's (an attempt at) a comprehensive list of everywhere I've used JavaScript/TypeScript:\r\n\r\n- 2024 - 2025: CVES\r\n    - Various userscripts to extract data from websites programmatically\r\n    - Custom scripts in Budibase\r\n- 2024 - now: This site! (Check out my Svelte post in my portfolio, uses TypeScript)\r\n- 2025 - now: [My grocery app, uses TypeScript](/feeds/main/093025_1135AM/)\r\n- 2024 - now: [My New Tab page, uses TypeScript](https://github.com/heyjoeway/startpage)\r\n- 2019 - 2022: Clarkson IMPETUS\r\n    - [MakeCode Arcade programming](https://github.com/heyjoeway/mca-squid-jump)\r\n- 2018 - 2019: Whiteface ASRC\r\n    - [Whiteface Tour](https://jojudge.com/whitefacetour/)\r\n    - [planetariumvr](https://github.com/heyjoeway/planetariumvr) (codename for the framework behind Whiteface Tour)\r\n    - [Kiosk display webpage](https://github.com/heyjoeway/whiteface-tv)\r\n- 2017 - 2018: SUNY Plattsburgh, [lcatDB](https://github.com/heyjoeway/lcatdb)\r\n- 2016: [Eagle Pride On the Sky (Science fair project)](https://github.com/heyjoeway/epots-doc)\r\n\r\nThe earliest JavaScript Git repo I have is when I started with GitHub in 2015: https://github.com/heyjoeway/raspmusicbox-client\r\n",[],[],{"hideHome":5,"urlShort":361,"date":52},"jojudge.com/feeds/portfolio/093025_0228PM","portfolio/093025_0228PM","/feeds/portfolio/093025_0228PM",{"id":365,"html":366,"htmlShort":367,"raw":368,"embeds":369,"media":370,"fm":371,"idFull":373,"url":374,"feed":0},"093025_1051AM","\u003Cscript context=\"module\">\n\texport const metadata = {\"hideHome\":true};\n\tconst { hideHome } = metadata;\n\u003C/script>\n\n\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props} {...metadata}>\n\u003Cp>In order to teach students programming in a way that can directly convert between block-based code (ala Scratch) and written code, we did a roll out of the MakeCode Arcade basic curriculum. And to make sure I understood it myself, I wrote a quick example game!\u003C/p>\n\u003Cp>\u003Ca\n  href=\"https://makecode.com/_6w9VAJWkpWRs\"\n  rel=\"nofollow\"\n>https://makecode.com/_6w9VAJWkpWRs\u003C/a>\u003C/p>\n\u003Cp>(Or the GitHub repo: \u003Ca\n  href=\"https://github.com/heyjoeway/mca-squid-jump\"\n  rel=\"nofollow\"\n>https://github.com/heyjoeway/mca-squid-jump\u003C/a>)\u003C/p>\n\u003C/Layout_MDSVEX_DEFAULT>","\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props} {...metadata}>\n\u003Cp>In order to teach students programming in a way that can directly convert between block-based code (ala Scratch) and written code, we did a roll out of the","---\r\nhideHome: true\r\n---\r\nIn order to teach students programming in a way that can directly convert between block-based code (ala Scratch) and written code, we did a roll out of the MakeCode Arcade basic curriculum. And to make sure I understood it myself, I wrote a quick example game!\r\n\r\nhttps://makecode.com/_6w9VAJWkpWRs\r\n\r\n(Or the GitHub repo: https://github.com/heyjoeway/mca-squid-jump)",[],[],{"hideHome":5,"urlShort":372,"date":52},"jojudge.com/feeds/portfolio/093025_1051AM","portfolio/093025_1051AM","/feeds/portfolio/093025_1051AM",{"id":376,"html":377,"htmlShort":378,"raw":379,"embeds":380,"media":381,"fm":382,"idFull":384,"url":385,"feed":0},"093025_1058AM","\u003Cscript context=\"module\">\n\texport const metadata = {\"hideHome\":true};\n\tconst { hideHome } = metadata;\n\u003C/script>\n\n\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props} {...metadata}>\n\u003Cp>As a hobby project, I ported several open-source games to the Nintendo Switch. This required a lot of deep-diving into the git history of other port projects to understand the process independently, which lead to a lot of experience with C/C++ and the GNU Make build system. I no longer maintain these projects, but they are still playable and you can learn more about the experience \u003Ca\n  href=\"/articles/switch-ports\"\n>here\u003C/a>.\u003C/p>\n\u003C/Layout_MDSVEX_DEFAULT>","\u003Cscript>\n\timport Layout_MDSVEX_DEFAULT, * as Components from '/home/runner/work/heyjoeway.github.io/heyjoeway.github.io/src/lib/MdsvexLayout.svelte';\n\u003C/script>\n\n\u003CLayout_MDSVEX_DEFAULT {...$$props} {...metadata}>\n\u003Cp>As a hobby project, I ported several open-source games to the Nintendo Switch. This required a lot of deep-diving into the git history of other port projec","---\r\nhideHome: true\r\n---\r\nAs a hobby project, I ported several open-source games to the Nintendo Switch. This required a lot of deep-diving into the git history of other port projects to understand the process independently, which lead to a lot of experience with C/C++ and the GNU Make build system. I no longer maintain these projects, but they are still playable and you can learn more about the experience [here](/articles/switch-ports).",[],[],{"hideHome":5,"urlShort":383,"date":52},"jojudge.com/feeds/portfolio/093025_1058AM","portfolio/093025_1058AM","/feeds/portfolio/093025_1058AM"],"uses":{"params":["feed"]}}]}
