{"type":"data","nodes":[{"type":"data","data":[{"categories":1},[2,3,4,5,6,7,8,9,10,11,12,13,14,15],"design","ui","programming","life","software","meta","windows","photography","work","portfolio","macos","multiplatform","games","linux"],"uses":{},"slash":"always"},{"type":"data","data":[{"articles":1,"slug":16},[2,10],{"slug":3,"path":4,"code":5,"fm":6},"notes-linodemigration","/articles/notes-linodemigration","\u003Cscript context=\"module\">\n\texport const metadata = {\"title\":\"Notes: Migrate Debian Linode to Proxmox\",\"categories\":\"software linux\",\"comments\":true};\n\tconst { title, categories, comments } = metadata;\n\u003C/script>\n\n\u003Cp>These are old notes from like 2022, but the process is probably still mostly the same. Let me know if there are any issues.\u003C/p>\n\u003Col>\n\u003Cli>\u003Ca\n  href=\"https://techdocs.akamai.com/cloud-computing/docs/copy-a-disk-over-ssh\"\n  rel=\"nofollow\"\n>Download your Linode’s disk image.\u003C/a>\u003C/li>\n\u003Cli>\u003Ca\n  href=\"https://pve.proxmox.com/wiki/Migrate_to_Proxmox_VE#Import_Disk\"\n  rel=\"nofollow\"\n>Import the disk image to an existing VM in Proxmox.\u003C/a> Make sure the VM is configured for BIOS boot, not UEFI.\u003C/li>\n\u003C/ol>\n\u003Cp>Our Linode image only contains the system partition, that is to say what is normally \u003Ccode>/dev/sda1\u003C/code> is instead the entire disk, \u003Ccode>/dev/sda\u003C/code>. We’ll need to copy the entire disk’s data to a partition on a new disk so that we can fit a partition layout and therefore a bootloader.\u003C/p>\n\u003Col start=\"3\">\n\u003Cli>Create another disk of the same size and attach it to the VM.\u003C/li>\n\u003Cli>Download, attach, and boot \u003Ca\n  href=\"https://gparted.org/download.php\"\n  rel=\"nofollow\"\n>GParted Live\u003C/a>.\u003C/li>\n\u003Cli>Initialize partition table of other disk using MBR format.\u003C/li>\n\u003Cli>Create a partition filling the entire disk and apply the changes.\u003C/li>\n\u003Cli>Time for the terminal!\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"language-undefined\">{@html `\u003Ccode class=\"language-undefined\"># Get root shell\nsudo su\n# Copy the data!\ndd if=/dev/sda of=/dev/sdb1 status=progress\n# Time to do some config editing...\nmount /dev/sdb1 /mnt\n# In fstab, comment out the line pointing to the swap partition.\nnano /mnt/etc/fstab\n# Remove the command line parameters from the GRUB config.\nnano /mnt/etc/default/grub\n# Install the GRUB bootloader\ngrub install --boot-directory=/mnt/boot /dev/sdb\n# The output it provides is gonna be a bit screwed up for now.\n# Edit the file below to replace all &#96;root=/dev/sda&#96; with &#96;root=/dev/sda1&#96;\nnano /mnt/boot/grub/grub.cfg\n\npoweroff\u003C/code>`}\u003C/pre>\n\u003Col start=\"8\">\n\u003Cli>Remove the assigned ISO and original system disk image, then boot. You should be able to get to your normal shell.\u003C/li>\n\u003Cli>More terminal!\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"language-undefined\">{@html `\u003Ccode class=\"language-undefined\"># Get root again...\nsudo su\n# Fix the bootloader for real this time\nupdate-grub\n# Fix your network interfaces (https://wiki.debian.org/NetworkConfiguration)\nnano /etc/network/interfaces\n# Fix your APT sources by replacing all instances of &#96;mirrors.linode.com&#96; with &#96;deb.debian.org&#96;\nnano /etc/apt/sources.list\n# Empty this file and fix your DNS nameservers. You should probably point it to your router if you don&#39;t know what you want to put here.\nnano /etc/resolv.conf\n# Off to the races!\napt update\napt upgrade\u003C/code>`}\u003C/pre>\n",{"title":7,"categories":8,"comments":9},"Notes: Migrate Debian Linode to Proxmox","software linux",true,{"slug":11,"path":12,"code":13,"fm":14},"notes-linux","/articles/notes-linux","\u003Cscript context=\"module\">\n\texport const metadata = {\"title\":\"Notes: Linux\",\"categories\":\"software linux\",\"comments\":true};\n\tconst { title, categories, comments } = metadata;\n\u003C/script>\n\n\u003Cp>Random notes for Windows. Primarily for my own reference.\u003C/p>\n\u003Ch1>Scripting\u003C/h1>\n\u003Cul>\n\u003Cli>Change Dir to Script Dir\n\u003Cul>\n\u003Cli>\u003Ccode>cd \"$(dirname \"$0\")\"\u003C/code>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch1>(My) Ideal Debian VM Setup\u003C/h1>\n\u003Ch2>Serial Access\u003C/h2>\n\u003Cpre class=\"language-undefined\">{@html `\u003Ccode class=\"language-undefined\"># Enable serial console\nsystemctl enable serial-getty@ttyS0.service\u003C/code>`}\u003C/pre>\n\u003Ch2>General\u003C/h2>\n\u003Cpre class=\"language-undefined\">{@html `\u003Ccode class=\"language-undefined\">timedatectl set-timezone America/New_York\napt update\napt upgrade -y\n# Enable automatic upgrades\napt install unattended-upgrades apt-listchanges sudo curl git -y\necho &quot;Unattended-Upgrade::Automatic-Reboot-WithUsers \\&quot;true\\&quot;;&quot; &gt; /etc/apt/apt.conf.d/52unattended-upgrades-local\u003C/code>`}\u003C/pre>\n\u003Ch3>With Docker\u003C/h3>\n\u003Cpre class=\"language-undefined\">{@html `\u003Ccode class=\"language-undefined\">apt install -y curl\ncurl -fsSL https://get.docker.com | sh\napt install -y docker-compose\ndocker run --detach --name watchtower --restart unless-stopped --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower\u003C/code>`}\u003C/pre>\n\u003Ch3>With SMB Share\u003C/h3>\n\u003Cpre class=\"language-undefined\">{@html `\u003Ccode class=\"language-undefined\">#!/bin/bash\necho &quot;Linux username: &quot;\nread linux_username\necho &quot;SMB Username: &quot;\nread smb_username\necho &quot;SMB Password: &quot;\nread smb_password\nmkdir /media/share\napt install cifs-utils -y\nprintf &quot;username=$smb_username&#92;npassword=$smb_password&quot; &gt; /root/sharecreds.txt\nprintf &quot;&#92;n//10.10.10.4/home /media/share cifs credentials=/root/sharecreds.txt,uid=$linux_username,gid=$linux_username,file_mode=0770,dir_mode=0770,noperm 0 0&#92;n&quot; &gt;&gt; /etc/fstab\nsystemctl daemon-reload\nadduser linux_username\necho &quot;*/1 *  * * *  mount -a&quot; | crontab - # Hack\nmount -a\u003C/code>`}\u003C/pre>\n",{"title":15,"categories":8,"comments":9},"Notes: Linux","linux"],"uses":{"params":["slug"]}}]}
